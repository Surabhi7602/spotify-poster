{"ast":null,"code":"var _jsxFileName = \"/Users/surabhishetty/Desktop/spotify-poster/top-album-poster-generator/src/Main.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi();\nfunction Main() {\n  _s();\n  const [accessToken, setAccessToken] = useState(null);\n  const [topTracks, setTopTracks] = useState([]);\n  const [albumCovers, setAlbumCovers] = useState([]);\n  useEffect(() => {\n    // Get access token from Spotify\n    const hash = window.location.hash.substring(1).split(\"&\").reduce(function (initial, item) {\n      if (item) {\n        var parts = item.split(\"=\");\n        initial[parts[0]] = decodeURIComponent(parts[1]);\n      }\n      return initial;\n    }, {});\n    window.location.hash = \"\";\n    let _accessToken = hash.access_token;\n    if (_accessToken) {\n      setAccessToken(_accessToken);\n      spotifyApi.setAccessToken(_accessToken);\n\n      // Get user's top tracks\n      spotifyApi.getMyTopTracks({\n        limit: 24\n      }).then(data => {\n        setTopTracks(data.items);\n\n        // Get album covers for each track's album\n        const albumIds = data.items.map(track => track.album.id);\n        spotifyApi.getAlbums(albumIds).then(data => {\n          setAlbumCovers(data.albums.map(album => album.images[0].url));\n        });\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!accessToken && /*#__PURE__*/_jsxDEV(\"a\", {\n      href: `${process.env.REACT_APP_SPOTIFY_AUTH_ENDPOINT}?client_id=${process.env.REACT_APP_SPOTIFY_CLIENT_ID}&redirect_uri=${process.env.REACT_APP_SPOTIFY_REDIRECT_URI}&response_type=token&show_dialog=true`,\n      children: \"Login with Spotify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), accessToken && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Top Tracks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: topTracks.map((track, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: albumCovers[index],\n            alt: track.album.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), track.name, \" by \", track.artists[0].name]\n        }, track.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"UxYGaxfdjaCTndKU0jyZquvrVgY=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["useState","useEffect","SpotifyWebApi","jsxDEV","_jsxDEV","spotifyApi","Main","_s","accessToken","setAccessToken","topTracks","setTopTracks","albumCovers","setAlbumCovers","hash","window","location","substring","split","reduce","initial","item","parts","decodeURIComponent","_accessToken","access_token","getMyTopTracks","limit","then","data","items","albumIds","map","track","album","id","getAlbums","albums","images","url","children","href","process","env","REACT_APP_SPOTIFY_AUTH_ENDPOINT","REACT_APP_SPOTIFY_CLIENT_ID","REACT_APP_SPOTIFY_REDIRECT_URI","fileName","_jsxFileName","lineNumber","columnNumber","index","src","alt","name","artists","_c","$RefreshReg$"],"sources":["/Users/surabhishetty/Desktop/spotify-poster/top-album-poster-generator/src/Main.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\n\nconst spotifyApi = new SpotifyWebApi();\n\nfunction Main() {\n  const [accessToken, setAccessToken] = useState(null);\n  const [topTracks, setTopTracks] = useState([]);\n  const [albumCovers, setAlbumCovers] = useState([]);\n\n  useEffect(() => {\n    // Get access token from Spotify\n    const hash = window.location.hash\n      .substring(1)\n      .split(\"&\")\n      .reduce(function (initial, item) {\n        if (item) {\n          var parts = item.split(\"=\");\n          initial[parts[0]] = decodeURIComponent(parts[1]);\n        }\n        return initial;\n      }, {});\n    window.location.hash = \"\";\n    let _accessToken = hash.access_token;\n\n    if (_accessToken) {\n      setAccessToken(_accessToken);\n      spotifyApi.setAccessToken(_accessToken);\n\n      // Get user's top tracks\n      spotifyApi.getMyTopTracks({ limit: 24 }).then((data) => {\n        setTopTracks(data.items);\n\n        // Get album covers for each track's album\n        const albumIds = data.items.map((track) => track.album.id);\n        spotifyApi.getAlbums(albumIds).then((data) => {\n          setAlbumCovers(data.albums.map((album) => album.images[0].url));\n        });\n      });\n    }\n  }, []);\n\n  return (\n    <div>\n      {!accessToken && (\n        <a\n          href={`${process.env.REACT_APP_SPOTIFY_AUTH_ENDPOINT}?client_id=${process.env.REACT_APP_SPOTIFY_CLIENT_ID}&redirect_uri=${process.env.REACT_APP_SPOTIFY_REDIRECT_URI}&response_type=token&show_dialog=true`}\n        >\n          Login with Spotify\n        </a>\n      )}\n      {accessToken && (\n        <div>\n          <h1>My Top Tracks</h1>\n          <ul>\n            {topTracks.map((track, index) => (\n              <li key={track.id}>\n                <img src={albumCovers[index]} alt={track.album.name} />\n                {track.name} by {track.artists[0].name}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}