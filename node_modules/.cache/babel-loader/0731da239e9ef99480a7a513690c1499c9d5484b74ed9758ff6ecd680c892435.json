{"ast":null,"code":"var _jsxFileName = \"/Users/surabhishetty/Desktop/spotify-poster/top-album-poster-generator/src/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { SpotifyAuth, Scopes } from \"react-spotify-auth\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport \"./Main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi();\nfunction Main() {\n  _s();\n  const [token, setToken] = useState(null);\n  const [topTracks, setTopTracks] = useState([]);\n  const [albumCovers, setAlbumCovers] = useState([]);\n  const [base, setBase] = useState(null);\n  const onAccessToken = accessToken => {\n    setToken(accessToken);\n    spotifyApi.setAccessToken(accessToken);\n  };\n  useEffect(() => {\n    if (token) {\n      getTopTracks();\n    }\n  }, [token]);\n  async function getTopTracks() {\n    try {\n      const response = await spotifyApi.getMyTopTracks({\n        time_range: \"long_term\",\n        limit: 16\n      });\n      setTopTracks(response.items);\n      console.log(response.items);\n      if (response.items.length > 0) {\n        generateAlbumUrls(response.items);\n      }\n    } catch (err) {\n      console.error(spotifyApi.getAccessToken);\n      console.error(\"Error retrieving top tracks:\", err.response);\n    }\n  }\n  function generateAlbumUrls(items) {\n    const coverUrls = [];\n    for (const track of items) {\n      const album = track.album;\n      if (album) {\n        const images = album.images;\n        if (images && images.length > 0) {\n          for (const image of images) {\n            if (image.height === 640) {\n              coverUrls.push(image.url);\n              break;\n            }\n          }\n        }\n      }\n    }\n    setAlbumCovers(coverUrls);\n  }\n  function imgLoad(url) {\n    return new Promise(function (resolve, reject) {\n      var img = new Image();\n      img.crossOrigin = \"Anonymous\";\n      img.src = url;\n      img.onload = function () {\n        resolve(img);\n      };\n      img.onerror = reject;\n    });\n  }\n  function generatePos() {\n    // map an array of promises calling imgLoad() for each url\n    let imageLoadpromises = albumCovers.map(imgLoad);\n    Promise.all(imageLoadpromises).then(function (images) {\n      //images is array of image elements from above\n      // do something here , they have all loaded\n\n      var canvas = document.createElement(\"canvas\");\n      canvas.width = 2048;\n      canvas.height = 2048;\n      var ctx = canvas.getContext(\"2d\");\n      var offsetY = 0;\n      for (var i = 0; i < images.length; i += 4) {\n        var rowImages = images.slice(i, i + 4);\n        var offsetX = 0;\n        for (var j = 0; j < rowImages.length; j++) {\n          var img = rowImages[j];\n          ctx.drawImage(img, offsetX, offsetY, 512, 512);\n          offsetX += 512;\n        }\n        offsetY += 512;\n      }\n      let b64Data = canvas.toDataURL();\n      setBase(b64Data);\n      // handleDownload(b64Data);\n\n      const pageImage = new Image();\n      pageImage.src = \"data:image/png;base64,\" + b64Data;\n      pageImage.onload = function () {\n        const canvas = document.createElement(\"canvas\");\n        canvas.width = pageImage.naturalWidth;\n        canvas.height = pageImage.naturalHeight;\n        const ctx = canvas.getContext(\"2d\");\n        ctx.imageSmoothingEnabled = false;\n        ctx.drawImage(pageImage, 0, 0);\n        console.log(canvas, pageImage);\n        saveScreenshot(canvas);\n      };\n    }).catch(function (err) {\n      console.log(\"One or more images did not load\");\n    });\n  }\n  function saveScreenshot(canvas) {\n    let fileName = \"image\";\n    const link = document.createElement(\"a\");\n    link.download = fileName + \".png\";\n    console.log(canvas);\n    canvas.toBlob(function (blob) {\n      console.log(blob);\n      link.href = URL.createObjectURL(blob);\n      link.click();\n    });\n  }\n  function handleDownload(base64Data) {\n    let contentType = \"image/jpeg\";\n    const linkSource = `data:${contentType};base64,${base64Data}`;\n    const downloadLink = document.createElement(\"a\");\n    downloadLink.href = linkSource;\n    downloadLink.download = \"top16tracks\";\n    downloadLink.click();\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: token ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 11\n      }, this), topTracks.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: topTracks.map(track => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: track.name\n        }, track.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 13\n      }, this), albumCovers.length > 0 && generatePos(), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownload(),\n        children: \"Download Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(SpotifyAuth, {\n      clientID: \"ed8e6a84c4d94b31a47fa7f4d8e8c274\",\n      redirectUri: \"http://localhost:3000/callback\",\n      scopes: [\"streaming\", \"user-read-private\", \"user-read-email\", \"user-top-read\"],\n      onAccessToken: onAccessToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"qlCGpUBlUN3IsnjKFQtk8JfFUEA=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","SpotifyAuth","Scopes","SpotifyWebApi","jsxDEV","_jsxDEV","spotifyApi","Main","_s","token","setToken","topTracks","setTopTracks","albumCovers","setAlbumCovers","base","setBase","onAccessToken","accessToken","setAccessToken","getTopTracks","response","getMyTopTracks","time_range","limit","items","console","log","length","generateAlbumUrls","err","error","getAccessToken","coverUrls","track","album","images","image","height","push","url","imgLoad","Promise","resolve","reject","img","Image","crossOrigin","src","onload","onerror","generatePos","imageLoadpromises","map","all","then","canvas","document","createElement","width","ctx","getContext","offsetY","i","rowImages","slice","offsetX","j","drawImage","b64Data","toDataURL","pageImage","naturalWidth","naturalHeight","imageSmoothingEnabled","saveScreenshot","catch","fileName","link","download","toBlob","blob","href","URL","createObjectURL","click","handleDownload","base64Data","contentType","linkSource","downloadLink","children","_jsxFileName","lineNumber","columnNumber","name","id","onClick","clientID","redirectUri","scopes","_c","$RefreshReg$"],"sources":["/Users/surabhishetty/Desktop/spotify-poster/top-album-poster-generator/src/Main.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { SpotifyAuth, Scopes } from \"react-spotify-auth\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport \"./Main.css\";\n\nconst spotifyApi = new SpotifyWebApi();\n\nfunction Main() {\n  const [token, setToken] = useState(null);\n  const [topTracks, setTopTracks] = useState([]);\n  const [albumCovers, setAlbumCovers] = useState([]);\n  const [base, setBase] = useState(null);\n\n  const onAccessToken = (accessToken) => {\n    setToken(accessToken);\n    spotifyApi.setAccessToken(accessToken);\n  };\n\n  useEffect(() => {\n    if (token) {\n      getTopTracks();\n    }\n  }, [token]);\n\n  async function getTopTracks() {\n    try {\n      const response = await spotifyApi.getMyTopTracks({\n        time_range: \"long_term\",\n        limit: 16,\n      });\n      setTopTracks(response.items);\n      console.log(response.items);\n      if (response.items.length > 0) {\n        generateAlbumUrls(response.items);\n      }\n    } catch (err) {\n      console.error(spotifyApi.getAccessToken);\n      console.error(\"Error retrieving top tracks:\", err.response);\n    }\n  }\n\n  function generateAlbumUrls(items) {\n    const coverUrls = [];\n    for (const track of items) {\n      const album = track.album;\n      if (album) {\n        const images = album.images;\n        if (images && images.length > 0) {\n          for (const image of images) {\n            if (image.height === 640) {\n              coverUrls.push(image.url);\n              break;\n            }\n          }\n        }\n      }\n    }\n    setAlbumCovers(coverUrls);\n  }\n\n  function imgLoad(url) {\n    return new Promise(function (resolve, reject) {\n      var img = new Image();\n      img.crossOrigin = \"Anonymous\";\n      img.src = url;\n      img.onload = function () {\n        resolve(img);\n      };\n      img.onerror = reject;\n    });\n  }\n\n  function generatePos() {\n    // map an array of promises calling imgLoad() for each url\n    let imageLoadpromises = albumCovers.map(imgLoad);\n\n    Promise.all(imageLoadpromises)\n      .then(function (images) {\n        //images is array of image elements from above\n        // do something here , they have all loaded\n\n        var canvas = document.createElement(\"canvas\");\n        canvas.width = 2048;\n        canvas.height = 2048;\n\n        var ctx = canvas.getContext(\"2d\");\n        var offsetY = 0;\n\n        for (var i = 0; i < images.length; i += 4) {\n          var rowImages = images.slice(i, i + 4);\n          var offsetX = 0;\n          for (var j = 0; j < rowImages.length; j++) {\n            var img = rowImages[j];\n            ctx.drawImage(img, offsetX, offsetY, 512, 512);\n            offsetX += 512;\n          }\n          offsetY += 512;\n        }\n\n        let b64Data = canvas.toDataURL();\n        setBase(b64Data);\n        // handleDownload(b64Data);\n\n        const pageImage = new Image();\n        pageImage.src = \"data:image/png;base64,\" + b64Data;\n        pageImage.onload = function () {\n          const canvas = document.createElement(\"canvas\");\n          canvas.width = pageImage.naturalWidth;\n          canvas.height = pageImage.naturalHeight;\n\n          const ctx = canvas.getContext(\"2d\");\n          ctx.imageSmoothingEnabled = false;\n          ctx.drawImage(pageImage, 0, 0);\n          console.log(canvas, pageImage);\n          saveScreenshot(canvas);\n        };\n      })\n      .catch(function (err) {\n        console.log(\"One or more images did not load\");\n      });\n  }\n\n  function saveScreenshot(canvas) {\n    let fileName = \"image\";\n    const link = document.createElement(\"a\");\n    link.download = fileName + \".png\";\n    console.log(canvas);\n    canvas.toBlob(function (blob) {\n      console.log(blob);\n      link.href = URL.createObjectURL(blob);\n      link.click();\n    });\n  }\n\n  function handleDownload(base64Data) {\n    let contentType = \"image/jpeg\";\n    const linkSource = `data:${contentType};base64,${base64Data}`;\n    const downloadLink = document.createElement(\"a\");\n    downloadLink.href = linkSource;\n    downloadLink.download = \"top16tracks\";\n    downloadLink.click();\n  }\n\n  return (\n    <div>\n      {token ? (\n        <div>\n          <p>{token}</p>\n          {topTracks.length > 0 && (\n            <ul>\n              {topTracks.map((track) => (\n                <li key={track.id}>{track.name}</li>\n              ))}\n            </ul>\n          )}\n          {albumCovers.length > 0 && generatePos()}\n          <button onClick={handleDownload()}>Download Image</button>\n        </div>\n      ) : (\n        <SpotifyAuth\n          clientID=\"ed8e6a84c4d94b31a47fa7f4d8e8c274\"\n          redirectUri=\"http://localhost:3000/callback\"\n          scopes={[\n            \"streaming\",\n            \"user-read-private\",\n            \"user-read-email\",\n            \"user-top-read\",\n          ]}\n          onAccessToken={onAccessToken}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}