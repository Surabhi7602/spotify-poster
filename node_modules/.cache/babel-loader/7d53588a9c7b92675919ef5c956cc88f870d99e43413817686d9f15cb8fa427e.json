{"ast":null,"code":"var _jsxFileName = \"/Users/surabhishetty/Desktop/spotify-poster/top-album-poster-generator/src/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { SpotifyAuth, Scopes } from \"react-spotify-auth\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport \"./Main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi();\nfunction Main() {\n  _s();\n  const [token, setToken] = useState(null);\n  const [topTracks, setTopTracks] = useState([]);\n  const [albumCovers, setAlbumCovers] = useState([]);\n  const [base, setBase] = useState(null);\n  const onAccessToken = accessToken => {\n    setToken(accessToken);\n    spotifyApi.setAccessToken(accessToken);\n  };\n  useEffect(() => {\n    if (token) {\n      getTopTracks();\n    }\n  }, [token]);\n  async function getTopTracks() {\n    try {\n      console.log(\"spotifyApi:\", spotifyApi); // Add this line\n      console.log(\"accessToken:\", token); // Add this line\n      const response = await spotifyApi.getMyTopTracks({\n        time_range: \"long_term\",\n        limit: 16\n      });\n      setTopTracks(response.items);\n      console.log(response.items);\n      if (response.items.length > 0) {\n        generateAlbumUrls(response.items);\n      }\n    } catch (err) {\n      console.error(spotifyApi.getAccessToken);\n      console.error(\"Error retrieving top tracks:\", err.response);\n    }\n  }\n  function generateAlbumUrls(items) {\n    const coverUrls = [];\n    for (const track of items) {\n      const album = track.album;\n      if (album) {\n        const images = album.images;\n        if (images && images.length > 0) {\n          for (const image of images) {\n            if (image.height === 640) {\n              coverUrls.push(image.url);\n              break;\n            }\n          }\n        }\n      }\n    }\n    setAlbumCovers(coverUrls);\n  }\n  function imgLoad(url) {\n    return new Promise(function (resolve, reject) {\n      var img = new Image();\n      img.crossOrigin = \"Anonymous\";\n      img.src = url;\n      img.onload = function () {\n        resolve(img);\n      };\n      img.onerror = reject;\n    });\n  }\n  function generatePos() {\n    // map an array of promises calling imgLoad() for each url\n    let imageLoadpromises = albumCovers.map(imgLoad);\n    Promise.all(imageLoadpromises).then(function (images) {\n      //images is array of image elements from above\n      // do something here , they have all loaded\n      console.log(images);\n      var canvas = document.createElement(\"canvas\");\n      canvas.width = 2048;\n      canvas.height = 2048;\n      var ctx = canvas.getContext(\"2d\");\n      var offsetY = 0;\n      for (var i = 0; i < images.length; i += 4) {\n        var rowImages = images.slice(i, i + 4);\n        var offsetX = 0;\n        for (var j = 0; j < rowImages.length; j++) {\n          var img = rowImages[j];\n          ctx.drawImage(img, offsetX, offsetY, 512, 512);\n          offsetX += 512;\n        }\n        offsetY += 512;\n      }\n      let base64 = canvas.toDataURL();\n      setBase(base64);\n    }).catch(function (err) {\n      console.log(\"One or more images did not load\");\n    });\n  }\n  function handleDownload() {}\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: token ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), topTracks.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: topTracks.map(track => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: track.name\n        }, track.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), albumCovers.length > 0 && generatePos(), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownload(),\n        children: \"Download Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), \";\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(SpotifyAuth, {\n      clientID: \"ed8e6a84c4d94b31a47fa7f4d8e8c274\",\n      redirectUri: \"http://localhost:3000/callback\",\n      scopes: [\"streaming\", \"user-read-private\", \"user-read-email\", \"user-top-read\"],\n      onAccessToken: onAccessToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"qlCGpUBlUN3IsnjKFQtk8JfFUEA=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","SpotifyAuth","Scopes","SpotifyWebApi","jsxDEV","_jsxDEV","spotifyApi","Main","_s","token","setToken","topTracks","setTopTracks","albumCovers","setAlbumCovers","base","setBase","onAccessToken","accessToken","setAccessToken","getTopTracks","console","log","response","getMyTopTracks","time_range","limit","items","length","generateAlbumUrls","err","error","getAccessToken","coverUrls","track","album","images","image","height","push","url","imgLoad","Promise","resolve","reject","img","Image","crossOrigin","src","onload","onerror","generatePos","imageLoadpromises","map","all","then","canvas","document","createElement","width","ctx","getContext","offsetY","i","rowImages","slice","offsetX","j","drawImage","base64","toDataURL","catch","handleDownload","children","fileName","_jsxFileName","lineNumber","columnNumber","name","id","onClick","clientID","redirectUri","scopes","_c","$RefreshReg$"],"sources":["/Users/surabhishetty/Desktop/spotify-poster/top-album-poster-generator/src/Main.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { SpotifyAuth, Scopes } from \"react-spotify-auth\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport \"./Main.css\";\n\nconst spotifyApi = new SpotifyWebApi();\n\nfunction Main() {\n  const [token, setToken] = useState(null);\n  const [topTracks, setTopTracks] = useState([]);\n  const [albumCovers, setAlbumCovers] = useState([]);\n  const [base, setBase] = useState(null);\n\n  const onAccessToken = (accessToken) => {\n    setToken(accessToken);\n    spotifyApi.setAccessToken(accessToken);\n  };\n\n  useEffect(() => {\n    if (token) {\n      getTopTracks();\n    }\n  }, [token]);\n\n  async function getTopTracks() {\n    try {\n      console.log(\"spotifyApi:\", spotifyApi); // Add this line\n      console.log(\"accessToken:\", token); // Add this line\n      const response = await spotifyApi.getMyTopTracks({\n        time_range: \"long_term\",\n        limit: 16,\n      });\n      setTopTracks(response.items);\n      console.log(response.items);\n      if (response.items.length > 0) {\n        generateAlbumUrls(response.items);\n      }\n    } catch (err) {\n      console.error(spotifyApi.getAccessToken);\n      console.error(\"Error retrieving top tracks:\", err.response);\n    }\n  }\n\n  function generateAlbumUrls(items) {\n    const coverUrls = [];\n    for (const track of items) {\n      const album = track.album;\n      if (album) {\n        const images = album.images;\n        if (images && images.length > 0) {\n          for (const image of images) {\n            if (image.height === 640) {\n              coverUrls.push(image.url);\n              break;\n            }\n          }\n        }\n      }\n    }\n    setAlbumCovers(coverUrls);\n  }\n\n  function imgLoad(url) {\n    return new Promise(function (resolve, reject) {\n      var img = new Image();\n       img.crossOrigin = \"Anonymous\";\n      img.src = url;\n      img.onload = function () {\n        resolve(img);\n      };\n      img.onerror = reject;\n    });\n  }\n\n  function generatePos(){\n  // map an array of promises calling imgLoad() for each url\n  let imageLoadpromises = albumCovers.map(imgLoad);\n\n  Promise.all(imageLoadpromises)\n    .then(function (images) {\n      //images is array of image elements from above\n      // do something here , they have all loaded\n      console.log(images);\n      var canvas = document.createElement(\"canvas\");\n    canvas.width = 2048;\n    canvas.height = 2048;\n\n    var ctx = canvas.getContext(\"2d\");\n    var offsetY = 0;\n\n    for (var i = 0; i < images.length; i += 4) {\n      var rowImages = images.slice(i, i + 4);\n      var offsetX = 0;\n      for (var j = 0; j < rowImages.length; j++) {\n        var img = rowImages[j];\n        ctx.drawImage(img, offsetX, offsetY, 512, 512);\n        offsetX += 512;\n        \n      }\n      offsetY += 512;\n    }\n   \n    let base64 = canvas.toDataURL();\n    setBase(base64);\n    \n    })\n    .catch(function (err) {\n      console.log(\"One or more images did not load\");\n    });\n  }\n\nfunction handleDownload(){}\n\n  return (\n    <div>\n      {token ? (\n        <div>\n          <p>{token}</p>\n          {topTracks.length > 0 && (\n            <ul>\n              {topTracks.map((track) => (\n                <li key={track.id}>{track.name}</li>\n              ))}\n            </ul>\n          )}\n          {albumCovers.length > 0 && generatePos()}\n          <button onClick={handleDownload()}>Download Image</button>;\n        </div>\n      ) : (\n        <SpotifyAuth\n          clientID=\"ed8e6a84c4d94b31a47fa7f4d8e8c274\"\n          redirectUri=\"http://localhost:3000/callback\"\n          scopes={[\n            \"streaming\",\n            \"user-read-private\",\n            \"user-read-email\",\n            \"user-top-read\",\n          ]}\n          onAccessToken={onAccessToken}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}