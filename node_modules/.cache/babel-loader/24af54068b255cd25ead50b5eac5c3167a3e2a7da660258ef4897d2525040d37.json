{"ast":null,"code":"var _jsxFileName = \"/Users/surabhishetty/Desktop/spotify-poster/top-album-poster-generator/src/DownloadImage.js\";\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DownloadImage = _ref => {\n  let {\n    base64String,\n    fileName\n  } = _ref;\n  const downloadImage = () => {\n    // Decode base64 string into binary string\n    const binaryString = atob(base64String);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n    // Convert binary string to bytes\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n    // Create Blob object from bytes\n    const blob = new Blob([bytes], {\n      type: \"image/jpeg\"\n    }); // Change MIME type if necessary\n\n    // Create download link\n    const downloadLink = document.createElement(\"a\");\n    downloadLink.href = URL.createObjectURL(blob);\n    downloadLink.download = fileName;\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n    document.body.removeChild(downloadLink);\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: downloadImage,\n    children: \"Download Image\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n};\n_c = DownloadImage;\nexport default DownloadImage;\nvar _c;\n$RefreshReg$(_c, \"DownloadImage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","DownloadImage","_ref","base64String","fileName","downloadImage","binaryString","atob","len","length","bytes","Uint8Array","i","charCodeAt","blob","Blob","type","downloadLink","document","createElement","href","URL","createObjectURL","download","body","appendChild","click","removeChild","onClick","children","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/surabhishetty/Desktop/spotify-poster/top-album-poster-generator/src/DownloadImage.js"],"sourcesContent":["import React from \"react\";\n\nconst DownloadImage = ({ base64String, fileName }) => {\n  const downloadImage = () => {\n    // Decode base64 string into binary string\n    const binaryString = atob(base64String);\n    const len = binaryString.length;\n    const bytes = new Uint8Array(len);\n    // Convert binary string to bytes\n    for (let i = 0; i < len; i++) {\n      bytes[i] = binaryString.charCodeAt(i);\n    }\n    // Create Blob object from bytes\n    const blob = new Blob([bytes], { type: \"image/jpeg\" }); // Change MIME type if necessary\n\n    // Create download link\n    const downloadLink = document.createElement(\"a\");\n    downloadLink.href = URL.createObjectURL(blob);\n    downloadLink.download = fileName;\n    document.body.appendChild(downloadLink);\n    downloadLink.click();\n    document.body.removeChild(downloadLink);\n  };\n\n  return <button onClick={downloadImage}>Download Image</button>;\n};\n\nexport default DownloadImage;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGC,IAAA,IAAgC;EAAA,IAA/B;IAAEC,YAAY;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAC/C,MAAMG,aAAa,GAAGA,CAAA,KAAM;IAC1B;IACA,MAAMC,YAAY,GAAGC,IAAI,CAACJ,YAAY,CAAC;IACvC,MAAMK,GAAG,GAAGF,YAAY,CAACG,MAAM;IAC/B,MAAMC,KAAK,GAAG,IAAIC,UAAU,CAACH,GAAG,CAAC;IACjC;IACA,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,GAAG,EAAEI,CAAC,EAAE,EAAE;MAC5BF,KAAK,CAACE,CAAC,CAAC,GAAGN,YAAY,CAACO,UAAU,CAACD,CAAC,CAAC;IACvC;IACA;IACA,MAAME,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACL,KAAK,CAAC,EAAE;MAAEM,IAAI,EAAE;IAAa,CAAC,CAAC,CAAC,CAAC;;IAExD;IACA,MAAMC,YAAY,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IAChDF,YAAY,CAACG,IAAI,GAAGC,GAAG,CAACC,eAAe,CAACR,IAAI,CAAC;IAC7CG,YAAY,CAACM,QAAQ,GAAGnB,QAAQ;IAChCc,QAAQ,CAACM,IAAI,CAACC,WAAW,CAACR,YAAY,CAAC;IACvCA,YAAY,CAACS,KAAK,EAAE;IACpBR,QAAQ,CAACM,IAAI,CAACG,WAAW,CAACV,YAAY,CAAC;EACzC,CAAC;EAED,oBAAOjB,OAAA;IAAQ4B,OAAO,EAAEvB,aAAc;IAAAwB,QAAA,EAAC;EAAc;IAAAzB,QAAA,EAAA0B,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAS;AAChE,CAAC;AAACC,EAAA,GAvBIhC,aAAa;AAyBnB,eAAeA,aAAa;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}