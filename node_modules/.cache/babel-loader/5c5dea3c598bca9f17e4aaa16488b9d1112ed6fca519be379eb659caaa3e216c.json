{"ast":null,"code":"var _jsxFileName = \"/Users/surabhishetty/Desktop/spotify-poster/top-album-poster-generator/src/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { SpotifyAuth, Scopes } from \"react-spotify-auth\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport \"./Main.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi();\nfunction Main() {\n  _s();\n  const [token, setToken] = useState(null);\n  const [topTracks, setTopTracks] = useState([]);\n  const [albumCovers, setAlbumCovers] = useState([]);\n  const onAccessToken = accessToken => {\n    setToken(accessToken);\n    spotifyApi.setAccessToken(accessToken);\n  };\n  useEffect(() => {\n    if (token) {\n      getTopTracks();\n    }\n  }, [token]);\n  async function getTopTracks() {\n    try {\n      console.log(\"spotifyApi:\", spotifyApi); // Add this line\n      console.log(\"accessToken:\", token); // Add this line\n      const response = await spotifyApi.getMyTopTracks({\n        time_range: \"long_term\",\n        limit: 16\n      });\n      setTopTracks(response.items);\n      console.log(response.items);\n      if (response.items.length > 0) {\n        generateAlbumUrls(response.items);\n      }\n    } catch (err) {\n      console.error(spotifyApi.getAccessToken);\n      console.error(\"Error retrieving top tracks:\", err.response);\n    }\n  }\n  function generateAlbumUrls(items) {\n    const coverUrls = [];\n    for (const track of items) {\n      const album = track.album;\n      if (album) {\n        const images = album.images;\n        if (images && images.length > 0) {\n          for (const image of images) {\n            if (image.height === 640) {\n              coverUrls.push(image.url);\n              break;\n            }\n          }\n        }\n      }\n    }\n    setAlbumCovers(coverUrls);\n    console.log(coverUrls);\n  }\n  function renderAlbumCovers() {\n    const rows = [];\n    for (let i = 0; i < albumCovers.length; i += 4) {\n      const row = [];\n      for (let j = 0; j < 4 && i + j < albumCovers.length; j++) {\n        const url = albumCovers[i + j];\n        row.push( /*#__PURE__*/_jsxDEV(\"img\", {\n          src: url,\n          alt: `Album cover ${i + j}`\n        }, i + j, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 18\n        }, this));\n      }\n      rows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: row\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this));\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid\",\n      children: rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: token ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: token\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), topTracks.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: topTracks.map(track => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: track.name\n        }, track.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(SpotifyAuth, {\n      clientID: \"ed8e6a84c4d94b31a47fa7f4d8e8c274\",\n      redirectUri: \"http://localhost:3000/callback\",\n      scopes: [\"streaming\", \"user-read-private\", \"user-read-email\", \"user-top-read\"],\n      onAccessToken: onAccessToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"Nfa6kXqr6c8GyetULTQHJEE+ALE=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","SpotifyAuth","Scopes","SpotifyWebApi","jsxDEV","_jsxDEV","spotifyApi","Main","_s","token","setToken","topTracks","setTopTracks","albumCovers","setAlbumCovers","onAccessToken","accessToken","setAccessToken","getTopTracks","console","log","response","getMyTopTracks","time_range","limit","items","length","generateAlbumUrls","err","error","getAccessToken","coverUrls","track","album","images","image","height","push","url","renderAlbumCovers","rows","i","row","j","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","className","children","map","name","id","clientID","redirectUri","scopes","_c","$RefreshReg$"],"sources":["/Users/surabhishetty/Desktop/spotify-poster/top-album-poster-generator/src/Main.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { SpotifyAuth, Scopes } from \"react-spotify-auth\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport \"./Main.css\";\n\nconst spotifyApi = new SpotifyWebApi();\n\nfunction Main() {\n  const [token, setToken] = useState(null);\n  const [topTracks, setTopTracks] = useState([]);\n  const [albumCovers, setAlbumCovers] = useState([]);\n\n  const onAccessToken = (accessToken) => {\n    setToken(accessToken);\n    spotifyApi.setAccessToken(accessToken);\n  };\n\n  useEffect(() => {\n    if (token) {\n      getTopTracks();\n    }\n  }, [token]);\n\n  async function getTopTracks() {\n    try {\n      console.log(\"spotifyApi:\", spotifyApi); // Add this line\n      console.log(\"accessToken:\", token); // Add this line\n      const response = await spotifyApi.getMyTopTracks({\n        time_range: \"long_term\",\n        limit: 16,\n      });\n      setTopTracks(response.items);\n      console.log(response.items);\n      if (response.items.length > 0) {\n        generateAlbumUrls(response.items);\n      }\n    } catch (err) {\n      console.error(spotifyApi.getAccessToken);\n      console.error(\"Error retrieving top tracks:\", err.response);\n    }\n  }\n\n  function generateAlbumUrls(items) {\n    const coverUrls = [];\n    for (const track of items) {\n      const album = track.album;\n      if (album) {\n        const images = album.images;\n        if (images && images.length > 0) {\n          for (const image of images) {\n            if (image.height === 640) {\n              coverUrls.push(image.url);\n              break;\n            }\n          }\n        }\n      }\n    }\n    setAlbumCovers(coverUrls);\n    console.log(coverUrls);\n  }\n\n  function renderAlbumCovers() {\n    const rows = [];\n    for (let i = 0; i < albumCovers.length; i += 4) {\n      const row = [];\n      for (let j = 0; j < 4 && i + j < albumCovers.length; j++) {\n        const url = albumCovers[i + j];\n        row.push(<img key={i + j} src={url} alt={`Album cover ${i + j}`} />);\n      }\n      rows.push(\n        <div key={i} className=\"row\">\n          {row}\n        </div>\n      );\n    }\n    return <div className=\"grid\">{rows}</div>;\n  }\n\n  return (\n    <div>\n      {token ? (\n        <div>\n          <p>{token}</p>\n          {topTracks.length > 0 && (\n            <ul>\n              {topTracks.map((track) => (\n                <li key={track.id}>{track.name}</li>\n              ))}\n            </ul>\n          )}\n          {/* {albumCovers.length > 0 && renderAlbumCovers()} */}\n        </div>\n      ) : (\n        <SpotifyAuth\n          clientID=\"ed8e6a84c4d94b31a47fa7f4d8e8c274\"\n          redirectUri=\"http://localhost:3000/callback\"\n          scopes={[\n            \"streaming\",\n            \"user-read-private\",\n            \"user-read-email\",\n            \"user-top-read\",\n          ]}\n          onAccessToken={onAccessToken}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Main;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}