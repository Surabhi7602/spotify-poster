{"ast":null,"code":"var _jsxFileName = \"/Users/surabhishetty/Desktop/spotify-poster/top-album-poster-generator/src/Main.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { SpotifyAuth, Scopes } from \"react-spotify-auth\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi();\nfunction Main() {\n  _s();\n  const [token, setToken] = useState(null);\n  const [topTracks, setTopTracks] = useState([]);\n  const [albumCovers, setAlbumCovers] = useState([]);\n  const onAccessToken = accessToken => {\n    setToken(accessToken);\n    spotifyApi.setAccessToken(accessToken);\n  };\n  useEffect(() => {\n    if (token) {\n      // Get user's top tracks\n      spotifyApi.getMyTopTracks({\n        limit: 24\n      }).then(data => {\n        setTopTracks(data.items);\n\n        // Get album covers for each track's album\n        const albumIds = data.items.map(track => track.album.id);\n        spotifyApi.getAlbums(albumIds).then(data => {\n          setAlbumCovers(data.albums.map(album => album.images[0].url));\n        });\n      });\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: token ? /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"You are authenticated with Spotify!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(SpotifyAuth, {\n      clientID: \"ed8e6a84c4d94b31a47fa7f4d8e8c274\",\n      redirectUri: \"http://localhost:3000/callback\",\n      scopes: [\"streaming\", \"user-read-private\", \"user-read-email\"],\n      onAccessToken: onAccessToken\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Main, \"Nfa6kXqr6c8GyetULTQHJEE+ALE=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","useEffect","SpotifyAuth","Scopes","SpotifyWebApi","jsxDEV","_jsxDEV","spotifyApi","Main","_s","token","setToken","topTracks","setTopTracks","albumCovers","setAlbumCovers","onAccessToken","accessToken","setAccessToken","getMyTopTracks","limit","then","data","items","albumIds","map","track","album","id","getAlbums","albums","images","url","children","fileName","_jsxFileName","lineNumber","columnNumber","clientID","redirectUri","scopes","_c","$RefreshReg$"],"sources":["/Users/surabhishetty/Desktop/spotify-poster/top-album-poster-generator/src/Main.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { SpotifyAuth, Scopes } from \"react-spotify-auth\";\nimport SpotifyWebApi from \"spotify-web-api-js\";\n\nconst spotifyApi = new SpotifyWebApi();\n\nfunction Main() {\n  const [token, setToken] = useState(null);\n  const [topTracks, setTopTracks] = useState([]);\n  const [albumCovers, setAlbumCovers] = useState([]);\n\n  const onAccessToken = (accessToken) => {\n    setToken(accessToken);\n    spotifyApi.setAccessToken(accessToken);\n  };\n\n  useEffect(() => {\n    if (token) {\n      // Get user's top tracks\n      spotifyApi.getMyTopTracks({ limit: 24 }).then((data) => {\n        setTopTracks(data.items);\n\n        // Get album covers for each track's album\n        const albumIds = data.items.map((track) => track.album.id);\n        spotifyApi.getAlbums(albumIds).then((data) => {\n          setAlbumCovers(data.albums.map((album) => album.images[0].url));\n        });\n      });\n    }\n  }, []);\n\n  return (\n    <div>\n      {token ? (\n        <h1>You are authenticated with Spotify!</h1>\n      ) : (\n        <SpotifyAuth\n          clientID=\"ed8e6a84c4d94b31a47fa7f4d8e8c274\"\n          redirectUri=\"http://localhost:3000/callback\"\n          scopes={[\"streaming\", \"user-read-private\", \"user-read-email\"]}\n          onAccessToken={onAccessToken}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default Main;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,MAAM,QAAQ,oBAAoB;AACxD,OAAOC,aAAa,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,UAAU,GAAG,IAAIH,aAAa,EAAE;AAEtC,SAASI,IAAIA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAElD,MAAMgB,aAAa,GAAIC,WAAW,IAAK;IACrCN,QAAQ,CAACM,WAAW,CAAC;IACrBV,UAAU,CAACW,cAAc,CAACD,WAAW,CAAC;EACxC,CAAC;EAEDhB,SAAS,CAAC,MAAM;IACd,IAAIS,KAAK,EAAE;MACT;MACAH,UAAU,CAACY,cAAc,CAAC;QAAEC,KAAK,EAAE;MAAG,CAAC,CAAC,CAACC,IAAI,CAAEC,IAAI,IAAK;QACtDT,YAAY,CAACS,IAAI,CAACC,KAAK,CAAC;;QAExB;QACA,MAAMC,QAAQ,GAAGF,IAAI,CAACC,KAAK,CAACE,GAAG,CAAEC,KAAK,IAAKA,KAAK,CAACC,KAAK,CAACC,EAAE,CAAC;QAC1DrB,UAAU,CAACsB,SAAS,CAACL,QAAQ,CAAC,CAACH,IAAI,CAAEC,IAAI,IAAK;UAC5CP,cAAc,CAACO,IAAI,CAACQ,MAAM,CAACL,GAAG,CAAEE,KAAK,IAAKA,KAAK,CAACI,MAAM,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC;QACjE,CAAC,CAAC;MACJ,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE1B,OAAA;IAAA2B,QAAA,EACGvB,KAAK,gBACJJ,OAAA;MAAA2B,QAAA,EAAI;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK,gBAE5C/B,OAAA,CAACJ,WAAW;MACVoC,QAAQ,EAAC,kCAAkC;MAC3CC,WAAW,EAAC,gCAAgC;MAC5CC,MAAM,EAAE,CAAC,WAAW,EAAE,mBAAmB,EAAE,iBAAiB,CAAE;MAC9DxB,aAAa,EAAEA;IAAc;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAEhC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACG;AAEV;AAAC5B,EAAA,CAvCQD,IAAI;AAAAiC,EAAA,GAAJjC,IAAI;AAyCb,eAAeA,IAAI;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}